[project]
name = "datashuttle"
authors = [
    {name = "Joe Ziminski", email = "j.ziminski@ucl.ac.uk"},
    {name = "Adam Tyson", email = "code@adamltyson.com"},
    {name = "Niko Sirmpilatze", email = "niko.sirbiladze@gmail.com"},
]
description = "DataShuttle automates the creation, validation and transfer of neuroscience project folders."
readme = "README.md"
requires-python = ">=3.9.0"
dynamic = ["version"]
license = {text = "BSD-3-Clause"}

dependencies = [
    "paramiko",
    "PyYAML",
    "requests",
    "rich",
    "fancylog>=0.4.2",
    "simplejson",
    "pyperclip",
    "textual<=1.0.0",
    "show-in-file-manager",
    "gitpython",
    "typeguard"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
]

[project.urls]
"Bug Tracker" = "https://github.com/neuroinformatics-unit/datashuttle/issues"
Documentation = "https://datashuttle.neuroinformatics.dev"
"Source Code" = "https://github.com/neuroinformatics-unit/datashuttle"
"User support" = "https://github.com/neuroinformatics-unit/datashuttle/discussions"

[project.optional-dependencies]
dev = [
    "pandas",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "coverage",
    "tox",
    "mypy",
    "pre-commit",
    "ruff",
    "setuptools_scm",
    "textual-dev",
    "types-requests",
    "types-PyYAML",
    "types-appdirs",
    "types-paramiko",
    "types-simplejson",
    "pandas-stubs",
    "types-setuptools",
    "pytest-asyncio",
    "validators",
]

[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.mypy]
exclude = [
    "tests/"
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["datashuttle*"]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
addopts = "--cov=datashuttle"

[tool.ruff]
line-length = 79
exclude = ["__init__.py","build",".eggs"]
fix = true

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
#ignore = [
#    "D203", # one blank line before class
#    "D213", # multi-line-summary second line
#    "D401", # first line of docstrings should be in an imperative mood
#    "E501", # limit lines to 79 characters
#]
#select = [
#    "E",   # pycodestyle errors
#    "F",   # Pyflakes
#    "UP",  # pyupgrade
#    "I",   # isort
#    "B",   # flake8 bugbear
#    "SIM", # flake8 simplify
#    "C90", # McCabe complexity
#    "D",   # pydocstyle
#]
per-file-ignores = { "tests/*" = [
    "D100", # missing docstring in public module
    "D205", # missing blank line between summary and description
    "D103", # missing docstring in public function
], "examples/*" = [
    "D400", # first line should end with a period.
    "D415", # first line should end with a period, question mark...
    "D205", # missing blank line between summary and description
], "__init__.py" = [
    # This was part of the old config
    # Is this needed? __init__.py is already part of tool.ruff.exclude
    "F401", # auto remove unused imports
] }

# Old ruff ruleset + pydocstyle added
# Inconsistent with movement repo, but saving this here for
# now in case there are good reasons to keep these rules
ignore = ["E203","E501","E731","C901","W291","W293","E402","E722",
    "D203", # one blank line before class
    "D213", # multi-line-summary second line
    "D401", # first line of docstrings should be in an imperative mood
]
select = [
    "I",        # isort
    "E",        # pycodestyle errors
    "F",        # Pyflakes
    "TC",       # flake8-type-checking
    "TID252",   # flake8-tidy-imports relative-imports
    "D",        # pydocstyle
]

[tool.ruff.format]
docstring-code-format = true # Also format code in docstrings

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.setuptools_scm]

[tool.check-manifest]
ignore = [
  "*.yaml",
  ".bumpversion.cfg",
  "tox.ini",
  "docs/*",
  "docs/source/*",
  "docs/source/pages/*",
  "tests/*",
  "tests/tests_unit/*",
  "tests/tests_integration/*",
  ".flake8"
]

[project.scripts]
datashuttle = "datashuttle.tui_launcher:main"

[tool.codespell]
skip = '.git,*.pdf,*.svg'
#
# ignore-words-list = ''
